name: Build Electron App

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Build and Release Electron App
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Download VC++ Redistributable (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p build-resources
          curl -L -o build-resources/vc_redist.x64.exe https://aka.ms/vs/17/release/vc_redist.x64.exe
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Bundle Python with PyInstaller
        run: node scripts/bundle-python.js
        
      - name: Build Webpack
        run: npm run build
        
      - name: Build Electron App
        run: npm run package
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: |
            dist/*.dmg
            dist/*.exe
            dist/*.deb
            dist/*.AppImage
            dist/*.zip
          if-no-files-found: ignore
          
  create-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display structure of downloaded files
        run: ls -R artifacts
        
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}